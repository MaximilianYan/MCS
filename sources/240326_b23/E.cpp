#include <iostream>
#include <fstream>
#include <random>
#include <vector>
#include <string>
#include <set>
#include <queue>
#include <iomanip>
#include <algorithm>

using namespace std;


int main() {
    int k = 10;
    string input;
    cin >> input;

    vector<int> curArr;

    int pos = k;
    for (int i = 0; i < k; ++i) {
        curArr.emplace_back(input[i] - '0');
    }

    int sum = 0;
    while (pos < input.size()) {
        int max = -1;
        int maxDelta = 20;
        int maxPos = -1;
        for (int i = 0; i < k; ++i) {
            if (abs(curArr[i] - curArr[(i + 1) % k]) < maxDelta) {
                maxDelta = abs(curArr[i] - curArr[(i + 1) % k]);
                max = curArr[i] * curArr[(i + 1) % k];
                maxPos = i;
            }
        }

        cout << (maxPos) << ((maxPos + 1) % k) << endl;
        sum += max;

        curArr[maxPos] = input[pos] - '0';
        curArr[(maxPos + 1) % k] = input[pos + 1] - '0';
        pos += 2;
    }

    cout << sum << endl;

    return 0;
}

// ---------------------------------------------                    ---------------------------------------------
// ----------------------------------------------                  ----------------------------------------------
// -----------------------------------------------                -----------------------------------------------
// ------------------------------------------------              ------------------------------------------------
// -------------------------------------------------            -------------------------------------------------
// --------------------------------------------------          --------------------------------------------------
// ---------------------------------------------------        ---------------------------------------------------
// ----------------------------------------------------      ----------------------------------------------------
// -----------------------------------------------------    -----------------------------------------------------
// ------------------------------------------------------  ------------------------------------------------------
// --------------------------------------------------------------------------------------------------------------

